'use client';

// ðŸ”Œ Vendors
import React, { Fragment } from 'react';

const DECORATIONS = [
  {
    viewBox: '0 0 500 500',
    id: 'deco1',
    path: {
      d: 'M154.73,36.51c76.34-56,157-51.84,278.72,42.23,56.42,43.6,19.69,134.25,50.16,211,23.09,58.22-11.33,169.94-86.79,166.11-103.39-5.29-229.55,86.49-310,19.82C.78,404.11-11,265.81,38.42,138.89,58.75,86.75,119.87,62,154.73,36.51Z'
    }
  },
  {
    viewBox: '0 0 500 500',
    id: 'deco2',
    path: {
      d: 'M119.84,49.87c101.4-57,267.74-78.36,347,7.94,46,50.22-5.52,137.65-8.11,206.47-1.95,52.85,30.73,121-5.63,158.57C360.74,518.14,161.5,526.23,60.12,441.13c-59-49.53-49.63-155-34.75-231.59C37.22,148.48,66.6,79.73,119.84,49.87Z'
    }
  },
  {
    viewBox: '0 0 500 500',
    id: 'deco3',
    path: {
      d: 'M61.06,55.91C136.49-26.35,308-12,391.6,61.06c89.62,78.42,137.94,267.16,58.86,356.41C351.8,529,25.66,535.93,10.65,386.19.87,288.66,64.49,268.07,72.5,204.42,78.71,155.17,27.87,92.07,61.06,55.91Z'
    }
  },
  {
    viewBox: '0 0 500 500',
    id: 'deco4',
    path: {
      d: 'M23.57,129.82C62.49,49.44,172.3,3.34,259.58,11.48c93.76,8.76,193.17,82.16,227.12,172.07,27.46,72.57,12.24,177.08-44.27,229.06-89.09,82.06-262.14,106.58-358,33C.54,381.23-23,225.94,23.57,129.82Z'
    }
  },
  {
    viewBox: '0 0 500 500',
    id: 'deco5',
    path: {
      d: 'M29.49,404.75C-14.88,291.37-17.23,113.88,79,41.72,182.54-35.95,385.26-.19,458.55,107.77c53.94,79.51,72.51,300-52.73,285.54S238,512.92,145.73,499C96.87,491.62,47.87,451.75,29.49,404.75Z'
    }
  },
  {
    viewBox: '0 0 500 500',
    id: 'deco6',
    path: {
      d: 'M262.9,397.06c-62.84,22-118.63,115.6-179.47,88.28-79.68-35.67-94.5-167.86-76.69-255C22.63,152.45,86.17,77.69,158.94,49.43c88.86-34.28,280.8-84.78,282.23,39.92s92.72,185.91,45.09,258.5C443.71,412.76,334.89,371.78,262.9,397.06Z'
    }
  },
  {
    viewBox: '0 0 500 500',
    id: 'deco7',
    path: {
      d: 'M465.27,393.83c-98.66,73.23-272.61,84.91-365.34,4.09C13.4,322.48-47.31,113.89,49.33,52.7c55.39-35,103.3,81.63,159.76,114.8C300.22,221,454.21,202.89,495.84,301.69,508.38,331.47,490.93,374.8,465.27,393.83Z'
    }
  },
  {
    viewBox: '0 0 500 500',
    id: 'deco8',
    path: {
      d: 'M164.45,6.43c75.73-20.46,165.9,9.92,227,62.79,53.84,46.66,92.69,125.05,94.23,200,1.4,60.74-22.86,132.39-69.55,166.13C318.43,505.56,150.71,532,64.33,445.68c-73.2-73.22-54.76-224-17-324.2C67.28,68.5,113.41,20,164.45,6.43Z'
    }
  },
  {
    viewBox: '0 0 500 500',
    id: 'deco9',
    path: {
      d: 'M442.64,51.67c45.57,44.35,58.8,118.11,49.48,191.87s-41.36,147.68-86.63,192.34C330,510.41,172.82,523.66,91.31,456.05,3.6,383.21-25.06,205.82,42.28,113,82.43,57.52,158.08,18.44,236,5S393.76,4.12,442.64,51.67Z'
    }
  },
  {
    viewBox: '0 0 500 500',
    id: 'deco10',
    path: {
      d: 'M144.86,50c81.89-57.11,216.2-78.51,280.25,7.83,37.12,50.24-4.46,137.68-6.53,206.52C417,317.2,443.27,385.23,414,422.91c-74.57,95.27-235.48,103.26-317.37,18.27-47.64-49.59-40-155.13-28-231.64C78.11,148.53,101.85,79.85,144.86,50Z'
    }
  },
  {
    viewBox: '0 0 500 500',
    id: 'deco11',
    path: {
      d: 'M425,219.12C461.77,297.34,525.57,402,478,473.8c-44.26,66.77-150.75-33.16-229.62-32.68s-193.71,103.43-237,35.93c-48.23-75,194.24-136.31,233.92-216.34C286.35,177.55,26.27,0,249.88,0,464.27,0,385.14,134,425,219.12Z'
    }
  },
  {
    viewBox: '0 0 500 500',
    id: 'deco12',
    path: {
      d: 'M498.35,169C486,270.47,360.42,319.44,277.47,376.48c-79.63,54.78-56.21,119.27-110.57,123.31C105.52,504.2,45.33,439.21,23.63,380.14-15.53,273.24-7.44,113.46,79.88,42.33c91.33-74.6,248.74-39.55,350.06,20.15C465.93,83.68,503.41,126.84,498.35,169Z'
    }
  }
];

export type DecorationType = React.ReactElement;

export interface DecorationProps {
  viewbox?: string;
  name?: string;
  width?: string;
  height?: string;
  shape?: number;
}

export const Decoration = ({
  viewbox,
  shape
}: DecorationProps): DecorationType => {
  const decoration = DECORATIONS.map((shape, i) => (
    <symbol key={i} viewBox={viewbox ? viewbox : shape.viewBox}>
      <title>{shape.id}</title>
      {shape.path ? (
        <path id={shape.id} d={shape.path.d} transform="translate(0 0)" />
      ) : null}
    </symbol>
  ));

  return (
    <Fragment>
      {(() => {
        switch (shape) {
          case 1:
            return <Fragment>{decoration[0]}</Fragment>;
          case 2:
            return <Fragment>{decoration[1]}</Fragment>;
          case 3:
            return <Fragment>{decoration[2]}</Fragment>;
          case 4:
            return <Fragment>{decoration[3]}</Fragment>;
          case 5:
            return <Fragment>{decoration[4]}</Fragment>;
          case 6:
            return <Fragment>{decoration[5]}</Fragment>;
          case 7:
            return <Fragment>{decoration[6]}</Fragment>;
          case 8:
            return <Fragment>{decoration[7]}</Fragment>;
          case 9:
            return <Fragment>{decoration[8]}</Fragment>;
          case 10:
            return <Fragment>{decoration[9]}</Fragment>;
          case 11:
            return <Fragment>{decoration[10]}</Fragment>;
          case 12:
            return <Fragment>{decoration[11]}</Fragment>;
          default:
            return null;
        }
      })()}
    </Fragment>
  );
};

export default Decoration;
